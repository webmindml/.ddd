python gradio example.ddd<br />
Creating a new file called ddd.py to import from webGPU as .ddd from ddd folder:<br />

<code>
# ddd.py

import os
import web_gpu_library as ddd  # Assuming web_gpu_library is the library you want to use

def process_ddd_file(file_path):
    # Custom code to read and process the .ddd file
    with open(file_path, 'r') as file:
        data = file.read()
    return data

def main():
    # Replace 'path_to_your_file.ddd' with the actual file path of your .ddd file or use default created ddd directory
    default_ddd_directory = "ddd"
    ddd_file_path = os.path.join(default_ddd_directory, "your_file.ddd")

    if not os.path.exists(default_ddd_directory):
        os.makedirs(default_ddd_directory)

    # Assume ddd is your web_gpu_library function that interacts with WebGPU
    if ddd.is_local_server:
        processed_data = process_ddd_file(ddd_file_path)
        # Call the WebGPU interaction function with the processed data
        output = ddd.webgpu_interaction(processed_data)
        print(output)  # Display the output from WebGPU
    else:
        print("Error: WebGPU interface must be running on a local server.")

if __name__ == "__main__":
    main()

      </code>

    In the ddd.py file, we import web_gpu_library as ddd, assuming that it is the library you want to use. Make sure to replace web_gpu_library with the actual name of the library. If the folder ddd does not exist it is created and made to be the default folder.

    We define the process_ddd_file function to read and process the .ddd file.

    The main() function reads the .ddd file, processes its content using process_ddd_file(), and then calls the webgpu_interaction function from the web_gpu_library with the processed data.

    When you run ddd.py, it will import the specified web_gpu_library and interact with WebGPU using the processed data from the .ddd file.

Please ensure that the web_gpu_library is installed or available in the same directory as ddd.py or in the appropriate import path to be properly imported. Also, modify 'path_to_your_file.ddd' with the actual file path of your .ddd file that you want to process.

Keep in mind that this code assumes you have a web_gpu_library with a function named webgpu_interaction that interacts with WebGPU and is_local_server variable. to check if the interface is running on a local server.
Adjust the code according to your specific library and interface setup.
